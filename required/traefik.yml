### Traefik global configuration
global:
  checkNewVersion: true
  sendAnonymousUsage: false

### Enable the Traefik WebUI dashboard
api:
  dashboard: true
  insecure: true

### Only required if you want to provide metrics for Prometheus
#metrics:
#  prometheus:
#    addEntryPointsLabels: true
#    addRoutersLabels: true
#    addServicesLabels: true
#    buckets:
#      - 0.1
#      - 0.3
#      - 1.2
#      - 5.0
#      - 10.0

### LOG LEVEL
### either INFO|DEBUG|ERROR
log:
  level: DEBUG

### LOG
log:
  level: ERROR
  filePath: "/logs/traefik.log"
  # output format can be either 'common' or 'json'
  format: common
  # log rotation
  maxSize: 10
  maxBackups: 3
  maxAge: 7
  # compress rotated logs with gzip
  compress: true

### ACCESS LOG
accessLog:
  filePath: "/logs/access.log"
  # output format can be either 'common' or 'json'
  format: common
  filters:
    statusCodes:
    # - "200"           # log successful http requests
      - "400-599"       # log failed http requests
    #retryAttempts: true
    #minDuration: "10ms"
  # how many log lines to keep in memory only before writing to disk
  bufferingSize: 50
  fields:
    headers:
      defaultMode: drop       # drop all headers per default
      names:
          User-Agent: keep    # log user agent strings

### Allow insecure backend connections
serversTransport:
  insecureSkipVerify: true

### Traefik entrypoints (network ports) configuration
entryPoints:
  # Not used in apps, but redirect everything from HTTP to HTTPS
  http:
    address: :80
    forwardedHeaders:
      trustedIPs: &trustedIps
        - 127.0.0.1/32     # localhost
        - 10.0.0.0/8       # private class A
        - 192.168.0.0/16   # private class B
        - 172.16.0.0/12    # private class C
    http:
      redirections:
        entryPoint:
          to: https
          scheme: https

  # HTTPS endpoint, with domain wildcard
  https:
    address: :443
    forwardedHeaders:
      trustedIPs: *trustedIps
    http:
      tls:
        # Generate a wildcard domain certificate
        certResolver: letsencrypt
        domains:
          - main: example.com          # change this to fit your proxy domain
            sans:
              - '*.example.com'        # change this to fit your proxy domain
      middlewares:
        - security-headers@file        # reference to a dynamic middleware for setting http security headers per default
        - rate-limit@file              # reference to a dynamic middleware for enabling rate limiting per default

providers:
  providersThrottleDuration: 2s

  # File provider for connecting things that are outside of docker / defining middleware
  file:
    filename: /etc/traefik/fileConfig.yml
    watch: true

  # Docker provider for connecting all apps that are inside of the docker network
  docker:
    watch: true
    network: traefikproxy              # Add Your Docker Network Name Here
    # Default host rule to containername.domain.example
    defaultRule: "Host(`{{ index .Labels \"com.docker.compose.service\"}}.example.com`)"      # change this to fit your proxy domain
    exposedByDefault: false

### Lets Encrypt for SSL certificates
certificatesResolvers:
  letsencrypt:
    acme:
      # change email to fit you want to use, should be valid but can be fake
      email: mail@example.com
      storage: /etc/traefik/acme.json
      # Use this entry only when setting up first time for testing
      caServer: https://acme-staging-v02.api.letsencrypt.org/directory
      # Use this entry only once testing is good and comment the above
      #caServer: https://acme-v02.api.letsencrypt.org/directory
      dnsChallenge:
        # change the provider to fit whatever youre using for DNS-01 challenge
        provider: desec
        # Used to make sure the dns challenge is propagated to the rights dns servers, probably not really required
        resolvers:
          - "8.8.8.8:53"         # Google
          - "8.8.4.4:53"         # Google
          - "45.54.76.1:53"      # DeSEC
          - "157.53.224.1:53"    # DeSEC
          - "1.1.1.1:53"         # Cloudflare
          - "1.0.0.1:53"         # Cloudflare
